image:
  registry: docker.io
  repository: haveachin/infrared
  tag: latest

# -- Optional imagePullSecret containing private registry credentials
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
# imagePullSecret: secretName

nodeSelector: {}

tolerations: []

affinity: {}

securityContext: {}
  # Security context settings
  # runAsUser: 1000
  # fsGroup: 2000

# initContainers:
#   - name: do-something
#     image: busybox
#     command: ['do', 'something']
#     volumesMounts:
#       - name: nfs
#         mountPath: /mnt/volume
#         readOnly: true
initContainers: []

# -- Annotations to be added to pods
##
podAnnotations: {}

replicaCount: 1

minAvailable: 1

resources: {}
# limits:
#   cpu: 10m
#   memory: 20Mi
# requests:
#   cpu: 10m
#   memory: 20Mi

## Liveness and readiness probe values
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
startupProbe: {}
  # failureThreshold: 30
  # periodSeconds: 10
livenessProbe: {}
  # initialDelaySeconds: 30
  # periodSeconds: 5
  # failureThreshold: 10
  # successThreshold: 1
  # timeoutSeconds: 1
readinessProbe: {}
  # initialDelaySeconds: 30
  # periodSeconds: 5
  # failureThreshold: 10
  # successThreshold: 1
  # timeoutSeconds: 1

extraEnv: []

configsMountPath: /configs

receiveProxyProtocol: false

api:
  enabled: false
  bind: 127.0.0.1:8080

metrics:
  enabled: false
  bind: :9100

# extraVolumes:
#   - volumeMounts:
#       - name: nfs
#         mountPath: /mnt/volume
#         readOnly: true
#     volumes:
#       - name: nfs
#         server: some.nfs.server.com
#         path: /
#         mountOptions:
#           - port=2049
#           - hard
#           - vers=4

configs: {}
# configs:
#   min.example.com:
#     domainName: mc.example.com
#     proxyTo: :8080
